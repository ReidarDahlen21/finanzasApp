<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Ingresos</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="/styles.css">

  <style>
    body {
      font-family: 'Roboto Condensed', sans-serif;
      background-color: #f8f9fa;
      padding: 2rem;
    }    
  </style>
</head>
<body>

  <%- include('partials/navbar') %>

  <div class="container-fluid">
    <h3 class="text-start my-3">Ingresos</h3>

    <!-- Botones de filtro -->
    <div class="btn-group mb-3" role="group">
      <a href="/ingresos?rango=ALL" class="btn btn-outline-primary btn-sm <%= rango === 'ALL' ? 'active' : '' %>">All</a>
      <a href="/ingresos?rango=2Y" class="btn btn-outline-primary btn-sm <%= rango === '2Y' ? 'active' : '' %>">2Y</a>
      <a href="/ingresos?rango=1Y" class="btn btn-outline-primary btn-sm <%= rango === '1Y' ? 'active' : '' %>">1Y</a>
    </div>

    <div class="row">
      <!-- Tabla -->
      <div class="col-md-6">
        <table class="table table-sm table-bordered table-hover">
          <thead class="table-light">
            <tr>
              <th>Fecha</th>
              <th>Ticker</th>
              <th>Tipo</th>
              <th>Ingreso</th>
              <th>Monto</th>
              <th>Comisi√≥n</th>
            </tr>
          </thead>
          <tbody id="tabla-ingresos"></tbody>

        </table>
      </div>

      <!-- Gr√°fico -->
      <div class="col-md-6">
        <canvas id="graficoIngresos"></canvas>
      </div>

      <div class="mt-3">
        <h6>Total de ingresos visibles:</h6>
        <p id="total-acumulado" class="fw-bold text-success">Calculando...</p>
      </div>

    </div>
  </div>

  <script>
    const ingresos = <%- JSON.stringify(ingresos) %>;
    const rango = "<%= rango %>";

    function filtrarPorRango(ingresos, rango) {
      const hoy = new Date();
      let desde = new Date('1900-01-01');

      if (rango === '1Y') {
        desde.setFullYear(hoy.getFullYear() - 1);
      } else if (rango === '2Y') {
        desde.setFullYear(hoy.getFullYear() - 2);
      }

      return ingresos.filter(i => new Date(i.fecha) >= desde);
    }

    function prepararDatosParaGrafico(filtrados) {
      const acumulados = {};
      let total = 0;

      filtrados.sort((a, b) => new Date(a.fecha) - new Date(b.fecha));
      filtrados.forEach(i => {
        const fechaStr = i.fecha.split('T')[0];
        total += parseFloat(i.monto);
        acumulados[fechaStr] = total;
      });

      return {
        labels: Object.keys(acumulados),
        data: Object.values(acumulados)
      };
    }

    const filtrados = filtrarPorRango(ingresos, rango);
    const { labels, data } = prepararDatosParaGrafico(filtrados);

    const ctx = document.getElementById('graficoIngresos').getContext('2d');
    const chart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: labels,
        datasets: [{
          label: 'Intereses Recibidos',
          data: data,
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: { beginAtZero: true }
        }
      }
    });

    
    function renderizarTabla(ingresos) {
      const tabla = document.getElementById('tabla-ingresos');
      tabla.innerHTML = '';

      ingresos.forEach(i => {
        const fila = document.createElement('tr');

        fila.innerHTML = `
          <td>${i.fecha.split('T')[0]}</td>
          <td>${i.ticker}</td>
          <td>${i.tipo_instrumento || '-'}</td>
          <td>${i.tipo_ingreso}</td>
          <td>${i.monto} ${i.moneda === 'ARS' ? '$' : 'u$d'}</td>
          <td>${i.comision != null ? i.comision + ' $' : '-'}</td>
        `;

        tabla.appendChild(fila);
      });
    }

    console.log("üß™ Datos filtrados:", filtrados);

    renderizarTabla(filtrados); // üëà al final del script, despu√©s de cargar el gr√°fico
    
    function mostrarTotalIngresos(ingresos) {
      let totalUSD = 0;
      let totalARS = 0;

      ingresos.forEach(i => {
        if (i.moneda === 'USD') {
          totalUSD += parseFloat(i.monto);
        } else if (i.moneda === 'ARS') {
          totalARS += parseFloat(i.monto);
        }
      });

      const partes = [];
      if (totalUSD > 0) {
        partes.push(totalUSD.toLocaleString('es-AR', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 2
        }));
      }
      if (totalARS > 0) {
        partes.push(totalARS.toLocaleString('es-AR', {
          style: 'currency',
          currency: 'ARS',
          minimumFractionDigits: 2
        }));
      }

      document.getElementById('total-acumulado').textContent = partes.join(' + ');
    }


    mostrarTotalIngresos(filtrados);


  </script>

</body>
</html>
