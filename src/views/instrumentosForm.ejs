<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Nuevo Instrumento</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="/styles.css">

  <style>
    body {
      font-family: 'Roboto Condensed', sans-serif;
      background-color: #f8f9fa;
      padding: 2rem;
    }
    .small-form {
      max-width: 400px;
      margin: auto;
    }
    .updated {
 	  	background-color: #d4edda !important; /* verde suave */
  	  transition: background-color 1s ease;
  	}
  	.updated.fade-out {
 			background-color: transparent;
		}
  </style>
</head>
<body>
	<%- include('partials/navbar') %>
	<div class="container-fluid mb-3">
	  <h3 class="text-start"><%= tituloPagina %></h3>
	</div>



  <div class="small-form">
    <h3 class="mb-3">Agregar Instrumento</h3>
    <form action="/instrumentos" method="POST">
      <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <input list="sugerencias" type="text" class="form-control form-control-sm" name="nombre" id="nombre" required>
		<datalist id="sugerencias"></datalist>
      </div>
      <div class="mb-3">
        <label for="tipo" class="form-label">Tipo</label>
        <input type="text" class="form-control form-control-sm" name="tipo">
      </div>
      <div class="mb-3">
        <label for="moneda_base" class="form-label">Moneda base</label>
        <select class="form-select form-select-sm" name="moneda_base" required>
          <option value="ARS">Pesos</option>
          <option value="USD">Dólares</option>
        </select>
      </div>
      <button type="submit" class="btn btn-primary btn-sm">Guardar</button>
    </form>

    <hr class="my-4">
	<h4>Instrumentos cargados</h4>
	<table class="table table-sm table-bordered mt-4">
	  <thead>
	    <tr>
	      <th>Nombre</th>
	      <th>Tipo</th>
	      <th>Moneda Base</th>
	    </tr>
	  </thead>
	  <tbody>
	    <% instrumentos.forEach(instr => { %>
	      <tr>
	        <td><%= instr.nombre %></td>
	        <td class="editable" data-id="<%= instr.id %>" data-field="tipo">
	          <%= instr.tipo || '-' %>
	        </td>
	        <td class="editable" data-id="<%= instr.id %>" data-field="moneda_base">
	          <%= instr.moneda_base || '-' %>
	        </td>
	      </tr>
	    <% }) %>
	  </tbody>
	</table>
  </div>

  <script>
	  const nombreInput = document.getElementById('nombre');
	  const datalist = document.getElementById('sugerencias');

	  nombreInput.addEventListener('input', async () => {
	    const query = nombreInput.value.trim();
	    if (query.length < 2) return;

	    const res = await fetch(`/instrumentos/autocomplete?q=${encodeURIComponent(query)}`);
	    const nombres = await res.json();

	    datalist.innerHTML = '';
	    nombres.forEach(n => {
	      const option = document.createElement('option');
	      option.value = n;
	      datalist.appendChild(option);
	    });
	  });

	  //edit moneda y Tipo
	  const opcionesTipo = ['CEDEAR', 'BONO', 'ON', 'LECAP', 'ACCION'];
	  const opcionesMoneda = ['ARS', 'USD'];

	  document.querySelectorAll('.editable').forEach(cell => {
	    cell.addEventListener('click', async () => {
	      if (cell.querySelector('select')) return;

	      const currentValue = cell.innerText.trim() === '-' ? '' : cell.innerText.trim();
	      const field = cell.dataset.field;
	      const id = cell.dataset.id;
	      const opciones = field === 'tipo' ? opcionesTipo : opcionesMoneda;

	      const select = document.createElement('select');
	      select.className = 'form-select form-select-sm';
	      opciones.forEach(op => {
	        const opt = document.createElement('option');
	        opt.value = op;
	        opt.text = op;
	        if (op === currentValue) opt.selected = true;
	        select.appendChild(opt);
	      });

	      cell.innerHTML = '';
	      cell.appendChild(select);
	      select.focus();

	      select.addEventListener('blur', async () => {
	        const nuevoValor = select.value;

	        try {
	          const res = await fetch('/instrumentos/actualizar-campo', {
	            method: 'POST',
	            headers: {
	              'Content-Type': 'application/json'
	            },
	            body: JSON.stringify({ id, campo: field, valor: nuevoValor })
	          });

	          if (res.ok) {
						  cell.innerText = nuevoValor;
						  cell.classList.add('updated');

							setTimeout(() => {
							  cell.classList.add('fade-out');
							}, 1000); // inicia el fade luego de medio segundo

							setTimeout(() => {
							  cell.classList.remove('updated', 'fade-out');
							}, 1800); // termina la animación completa después de 1.5s
						}
					 	else {
	            alert('❌ Error al actualizar');
	            cell.innerText = currentValue;
	          }
	        } catch (err) {
	          console.error(err);
	          cell.innerText = currentValue;
	        }
	      });
	    });
	  });
	</script>


</body>
</html>
